// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShoppingCart.Infrastructure.Data;

#nullable disable

namespace ShoppingCart.Infrastructure.Migrations
{
    [DbContext(typeof(ShoppingCartContext))]
    partial class ShoppingCartContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShoppingCart.Entity.Model.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("LastUpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("ShoppingCart.Entity.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ReservedQuantity")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "https://images.unsplash.com/photo-1517336714731-489689fd1ca8",
                            Name = "Laptop",
                            Price = 999.99m,
                            ReservedQuantity = 0,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "https://images.unsplash.com/photo-1517336714731-489689fd1ca8",
                            Name = "Smartphone",
                            Price = 499.99m,
                            ReservedQuantity = 0,
                            Stock = 20
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "https://images.unsplash.com/photo-1517336714731-489689fd1ca8",
                            Name = "Headphone",
                            Price = 99.99m,
                            ReservedQuantity = 0,
                            Stock = 15
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "https://images.unsplash.com/photo-1517336714731-489689fd1ca8",
                            Name = "Toy",
                            Price = 99.99m,
                            ReservedQuantity = 0,
                            Stock = 15
                        },
                        new
                        {
                            Id = 5,
                            ImageUrl = "https://images.unsplash.com/photo-1517336714731-489689fd1ca8",
                            Name = "Tablet",
                            Price = 99.99m,
                            ReservedQuantity = 0,
                            Stock = 15
                        },
                        new
                        {
                            Id = 6,
                            ImageUrl = "https://images.unsplash.com/photo-1517336714731-489689fd1ca8",
                            Name = "Mobile",
                            Price = 99.99m,
                            ReservedQuantity = 0,
                            Stock = 15
                        },
                        new
                        {
                            Id = 7,
                            ImageUrl = "https://images.unsplash.com/photo-1517336714731-489689fd1ca8",
                            Name = "Sofa",
                            Price = 99.99m,
                            ReservedQuantity = 0,
                            Stock = 15
                        },
                        new
                        {
                            Id = 8,
                            ImageUrl = "https://images.unsplash.com/photo-1517336714731-489689fd1ca8",
                            Name = "Television",
                            Price = 99.99m,
                            ReservedQuantity = 0,
                            Stock = 15
                        });
                });

            modelBuilder.Entity("ShoppingCart.Entity.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "$2a$10$hR3ZD1BCEQxfdcRQy3WZjuSVZ6nsj.iEgmytTZ0YTtUJjGwpJw2h6",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Password = "$2a$10$NLDPl7iTQfKbnax5f4/BReLr2QPEtnZX2zipdxb4Nkl7F9auqM.SK",
                            Username = "testuser"
                        });
                });

            modelBuilder.Entity("ShoppingCart.Entity.Model.Cart", b =>
                {
                    b.HasOne("ShoppingCart.Entity.Model.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShoppingCart.Entity.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
